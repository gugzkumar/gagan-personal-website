{
  "date": "2022-12-29T18:12:35.171Z",
  "title": "Building a CMS Powered Blog With Create React App and Netlify",
  "description": "This guide will show you how you can setup your own blogging website using Create a React App and Netlify. We take advantage of Netlify's easy to use CMS and hosting platform, and Create a React Apps flexibility. This makes the setup as simple as possible so you can start blogging immediately, while still allowing room for further customization and adding new features to your Web App.",
  "image": "/images/react-plus-netlify.png",
  "body": "## Architecture\n\n![](/images/cra_netlify_arch.png)\n\n* Github as acts as the repository and version control tool for all our code\n* Netlify hosts the static Web Assets and makes your Application publicly accessible. The following are hosted:\n  * Main webpage (includes Landing Page and Blogs) is written in React\n  * Web page embedded with Netlify CMS UI is hosted\n* Netlify Identity is used so the owner of the application can login and use the Netlify CMS securely\n* Netlify Functions is a feature that makes it easy for you to set up JS functions that can be triggered by an API request\n* When the user makes changes/adds new application content via CMS, Netlify publishes those changes directly to Github *(this is important, since traditionally CMS' save data to a database, but here Netlify saves the data within source control)*\n\n## G﻿etting Started\n\nHere's how you can set up and use this Application for your self\n\n### Step 01: Copy Repo to Github\n\nClone or fork <https://github.com/gugzkumar/create-react-app-with-netlify-cms>\n\n### Step 02: Create a Netlify Account\n\nCreate an account in [Netlify](https://www.netlify.com) if you don’t have one\n\n### Step 03: Set up your site in Netlify\n\nFollow the instructions in <https://docs.netlify.com/welcome/add-new-site/> for importing from an existing repository. Use your github repository from step 1.\n\nFor build settings you can use the following:\n\n* Base directory: root of the project (you can leave this blank)\n* Build command: `npm run build`\n* Publish directory: `build`\n\nFrom here, feel free to choose your own domain, and secure the website with https.\n\n### Step 04: Set up Netlify Identity\n\nOnce your site is up and running, go to you site settings and enable Netlify Identity. Then scroll all the way down and enable git gateway. \n\n![](/images/netlify_identity.png)\n\nGot to https://\\[your_website_name].netlify.app/admin sign up for account. Confirm it. Now you can log in and use the Netlify CMS. Try adding a new blog.\n\n![](/images/netlify_cms_signup.png)\n\nFinally go and disable sign ups for your website in the Netlify Identity settings.\n\n## Using and Adding New Features\n\n### Folder Structure\n\n```\n├── cmsContent/\n│   └── blogs/\n│       ├── *.json\n├── netlify/\n│   └── functions/\n│       └── *.js\n├── public/\n│   ├── admin/\n│   │   ├── config.yml\n│   │   └── index.html\n│   ├── content/\n│   ├── images/\n│       └── *.js\n│   ├── _redirects\n│   └── index.html\n├── src/\n│   ├── cmsConfigs/\n│   ├── components/\n│   │   ├── Footer/\n│   │   └── Header/\n│   ├── pages/\n│   │   ├── Blogs/\n│   │   └── Landing/\n│   ├── styles/\n│   │   ├── Button.js\n│   │   ├── consts.js\n│   │   └── theme.js\n│   ├── App.js\n│   └── index.js\n├── buildCMSContent.js\n├── netlify.toml\n└── package.json\n```\n\nIf you are familiar with [Create a React App](<https://github.com/facebook/create-react-app>), then a lot of the files should be familiar to you. I suggest you do read its documentation, since it can help you with this app too. I won't describe the purpose of ever file and folder, just the one's I think are important to know and may not get covered in Create a React App.\n\n### Running Locally\n\n* Having node is installed is pre-requisite for running the app locally\n* Install the netlify cli `npm install netlify-cli -g`\n* Install all dependencies: `npm install`\n* Run `node buildCMSContent.js` to build the CMS content locally so you can see them during local development\n* Run `netlify dev`\n* The application is now hosted statically on <http://localhost:8888>\n\n**Important:** If new content has been added via CMS, rerun `node buildCMSContent.js` to see the latest content locally.\n\n### Adding a new blog\n\nLog in to https://\\[your_website_name].netlify.app/admin and use the CMS to add a new blog.\n\n### Adding a new collection for the CMS\n\nTo add a new collection for your CMS (Blogs collection is setup by default), add to the configuration file in `public/admin/config.yml`. Read Netlify's Documentation for more guidance:\n\n- <https://www.netlifycms.org/docs/configuration-options/#collections>\n- <https://www.netlifycms.org/docs/collection-types/>\n\nMake sure the `folder` field value is `\"cmsContent/<name>\"` where `<name>` is the value of the `<name>` field\n\n### Styling\n\nThe application is setup to use [Chakra UI](<https://chakra-ui.com/>) and [@emotion/styled](<https://emotion.sh/docs/styled>) to handle styling. You can update and variants for Chakra UI components by updating the files in `src/styles/`. This will keep the theming of our Web App more consistent. Read for more info:\n\n- <https://chakra-ui.com/docs/styled-system/customize-theme>\n- <https://chakra-ui.com/docs/styled-system/component-style>\n\n### Functions\n\nNetlify has a nifty feature called [Neltify Functions](<https://www.netlify.com/products/functions/>). This allows you to host JS functions that can be triggered by and HTTPS request. We have one setup for you out of the box in `netlify/functions`. Try it out by visiting the following URL in your browser: `https://[your_website_name].app/.netlify/functions/hello`\n\nIf you want to add a new function, just add a javascript file to the `netlify/functions/` folder, and the endpoint will be `https://[your_website_name].app/.netlify/functions/<file_name>`."
}